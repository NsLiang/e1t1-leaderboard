{"version":3,"sources":["components/ButtonLink.js","components/ButtonPassword.js","pages/Home.jsx","components/Header.js","resources/config.js","components/helpers/load.js","components/Leaderboard.js","pages/TeamLeaders.jsx","pages/Interns.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","button","margin","paddingLeft","paddingRight","ButtonLink","props","primary","to","color","variant","classes","renderLink","React","useMemo","forwardRef","itemProps","ref","Button","component","className","ButtonPassword","state","showInputField","this","setState","Grid","container","alignItems","direction","justify","item","xs","onClick","showPasswordField","func","Fade","in","timeout","TextField","id","label","type","autoComplete","Component","withStyles","theme","Home","style","minHeight","Typography","homeButton","marginRight","spacing","title","flexGrow","appbar","background","palette","default","text","marginBottom","IconButtonLink","IconButton","edge","Header","AppBar","position","elevation","Toolbar","name","apiKey","discoveryDocs","spreadsheetId","load","callback","window","gapi","client","sheets","spreadsheets","values","get","config","range","then","response","interns","result","map","intern","points","error","Leaderboard","loading","onLoad","data","initClient","init","width","maxPoints","Box","Paper","a","b","parseInt","barPaperTL","loadColor","sort","comparePoints","location","pathname","barPaperIntern","slice","loadingStyle","notLoading","Container","maxWidth","paper","LinearProgress","key","Bar","padding","display","flexDirection","overflow","whiteSpace","dark","secondary","createMuiTheme","App","ThemeProvider","CssBaseline","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.de0d2af1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    margin: '25px 15px',\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n  },\r\n});\r\n\r\nexport default function ButtonLink(props) {\r\n    const { primary, to, color, variant } = props;\r\n    const classes = useStyles();\r\n  \r\n    const renderLink = React.useMemo(\r\n      () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n      [to],\r\n    );\r\n  \r\n    return (\r\n      <Button color={color} variant={variant} component={renderLink} className={classes.button}>\r\n        {primary}\r\n      </Button>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Fade, TextField, Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport ButtonLink from './ButtonLink';\r\n\r\nconst useStyles = theme => ({\r\n    button: {\r\n      margin: '25px 15px',\r\n      paddingLeft: 25,\r\n      paddingRight: 25,\r\n    },\r\n});\r\n\r\n\r\nclass ButtonPassword extends Component {\r\n    state = {\r\n        showInputField: false,\r\n    }\r\n\r\n    showPasswordField() {\r\n        this.setState({showInputField: true});\r\n    }\r\n    \r\n    render() {\r\n        const { showInputField } = this.state;\r\n        const { classes } = this.props;\r\n        return (\r\n            <Grid container  alignItems=\"center\" direction=\"column\" justify=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Button color=\"secondary\" variant=\"outlined\" className={classes.button} onClick={() => this.showPasswordField()}>\r\n                        Team Leaders\r\n                    </Button>\r\n                    <ButtonLink primary=\"Interns\" to=\"/interns\" color=\"primary\" variant=\"contained\" func={null}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Fade in={showInputField} timeout={1000}>\r\n                        <TextField\r\n                            id=\"outlined-password-input\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            margin=\"dense\"\r\n                            color=\"secondary\"\r\n                            autoComplete=\"current-password\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Fade>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nButtonPassword.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(useStyles)(ButtonPassword);","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport ButtonPassword from '../components/ButtonPassword';\r\n\r\nexport default function Home(){\r\n    return (\r\n      <Grid container alignItems=\"center\" direction=\"column\" justify=\"center\" style={{ minHeight: '100vh' }}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h1\"> E1T1 Leaderboard</Typography>\r\n        </Grid>\r\n        <ButtonPassword/>\r\n        {/* <Grid item xs={12}>\r\n            <ButtonLink primary=\"Team Leaders\" to=\"/teamleaders\" color=\"secondary\" variant=\"outlined\"/>\r\n            <ButtonLink primary=\"Interns\" to=\"/interns\" color=\"primary\" variant=\"contained\"/>\r\n        </Grid> */}\r\n      </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    homeButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appbar: {\r\n        background: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        marginBottom: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nfunction IconButtonLink(props) {\r\n    const { primary, to, } = props;\r\n    const classes = useStyles();\r\n  \r\n    const renderLink = React.useMemo(\r\n      () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n      [to],\r\n    );\r\n  \r\n    return (\r\n      <IconButton edge=\"start\" className={classes.homeButton} color=\"inherit\" component={renderLink}>\r\n        {primary}\r\n      </IconButton>\r\n    )\r\n  }\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className={classes.appbar} elevation={0}>\r\n            <Toolbar>\r\n                <IconButtonLink primary={<CloseIcon/>} to=\"/\"/>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.name}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default {\r\n    apiKey: \"AIzaSyCaS_MvM8zO_IpBmura0jDUbZ4JscmjjPY\",\r\n    discoveryDocs: \r\n      [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\r\n    spreadsheetId: \"1akEpKJrNmFzd2fZVIPWWSCu3EGiQbL0HM1-SjoJj45c\"\r\n  };","import config from \"../../resources/config\";\r\n\r\nexport default function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"apitesting!A2:B22\"\r\n      })\r\n      .then(\r\n        response => {\r\n          const data = response.result.values;\r\n          const interns = data.map(intern => ({\r\n            name: intern[0],\r\n            points: intern[1],\r\n          })) || [];\r\n          callback({\r\n            interns\r\n          });\r\n        },\r\n        response => {\r\n          callback(false, response.result.error);\r\n        }\r\n      );\r\n  });\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport load from './helpers/load'\r\nimport config from '../resources/config';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Paper, Container, Typography, Box, LinearProgress, Fade } from '@material-ui/core';\r\n\r\nconst useStyles = theme => ({\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    barPaperIntern: {\r\n      padding: theme.spacing(2),\r\n      margin: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      overflow: 'hidden',\r\n      whiteSpace: 'nowrap',\r\n      color: 'white',\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    barPaperTL: {\r\n      padding: theme.spacing(2),\r\n      margin: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      overflow: 'hidden',\r\n      whiteSpace: 'nowrap',\r\n      color: 'white',\r\n      background: theme.palette.secondary.dark,\r\n    },\r\n    name: {\r\n      flexGrow: 1,\r\n    },\r\n    loading: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    notLoading: {\r\n        padding: 0,\r\n    }\r\n});\r\n\r\nclass Leaderboard extends Component {\r\n    \r\n    state = {\r\n        interns: [],\r\n        error: null,\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.gapi.load(\"client\", this.initClient);\r\n    }\r\n\r\n    onLoad = (data, error) => {\r\n        if (data) {\r\n            const interns = data.interns;\r\n            this.setState({ interns });\r\n            this.setState({loading: false});\r\n        } else {\r\n            this.setState({ error });\r\n        }\r\n    };\r\n\r\n    initClient = () => {\r\n        window.gapi.client.init({\r\n            apiKey: config.apiKey,\r\n            discoveryDocs: config.discoveryDocs,\r\n        }).then(() => {\r\n            load(this.onLoad);\r\n        });\r\n    };\r\n\r\n    Bar(props) {\r\n        const { name, points, color, classes, maxPoints } = props;\r\n        const width = points / maxPoints;\r\n        return(\r\n            <Box width={width}>\r\n                <Paper elevation={3} className={color}>\r\n                    <Typography className={classes.name}> {name} </Typography>\r\n                    <Typography> {points} </Typography>\r\n                </Paper>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    comparePoints(a, b) {\r\n        if (parseInt(a.points) === parseInt(b.points)) {\r\n          return 0;\r\n        }\r\n        else {\r\n          return (parseInt(a.points) > parseInt(b.points)) ? -1 : 1;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { interns, error, loading } = this.state;\r\n        const { classes } = this.props;\r\n        let maxPoints = 0;\r\n        let color = classes.barPaperTL;\r\n        let loadColor = \"secondary\";\r\n\r\n        if (error) {\r\n            return <div>{this.state.error}</div>\r\n        }\r\n        \r\n        let data = interns.sort(this.comparePoints);\r\n\r\n        if (interns[0]) {\r\n            maxPoints = interns[0].points;\r\n        }\r\n\r\n        if (window.location.pathname === \"/interns\") {\r\n            color = classes.barPaperIntern;\r\n            data = interns.slice(0, 3);\r\n            loadColor = \"primary\"\r\n        }\r\n\r\n        let loadingStyle = classes.loading;\r\n        if(!loading) {\r\n            loadingStyle = classes.notLoading;\r\n        }\r\n\r\n        return (\r\n            <Container maxWidth=\"lg\">\r\n                <Paper elevation={2} className={classes.paper} width={1}>\r\n                    <Fade in={loading} timeout={30}>\r\n                        <LinearProgress color={loadColor} className={loadingStyle}/>\r\n                    </Fade>\r\n                    <Fade in={!loading} timeout={1000}>\r\n                        <div>\r\n                            {data.map((intern, key) => (\r\n                                <this.Bar key={key} name={intern.name} points={intern.points} color={color} classes={classes} maxPoints={maxPoints}/>\r\n                            ))}\r\n                        </div>\r\n                    </Fade>\r\n                </Paper>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nLeaderboard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(Leaderboard);","import React from 'react'\r\nimport Header from '../components/Header'\r\nimport Leadeboard from '../components/Leaderboard'\r\n\r\nexport default function Home(){\r\n    return (\r\n      <div>\r\n        <Header name=\"Team Leaders\"></Header>\r\n        <Leadeboard/>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Leaderboard from '../components/Leaderboard'\r\n\r\nexport default function Home(){\r\n    return (\r\n        <div>\r\n          <Header name=\"Interns\"/>\r\n          <Leaderboard/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport Home from './pages/Home';\nimport TeamLeaders from './pages/TeamLeaders';\nimport Interns from './pages/Interns';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <Router>\n          <Switch>\n            <Route exact path=\"/\"> <Home/> </Route>\n            <Route exact path=\"/teamleaders\"> <TeamLeaders/> </Route>\n            <Route exact path=\"/interns\"> <Interns/> </Route>\n          </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}