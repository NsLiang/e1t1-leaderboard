{"version":3,"sources":["components/ButtonLink.js","pages/Home.jsx","components/Header.js","components/Leaderboard.js","pages/TeamLeaders.jsx","pages/Interns.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","button","margin","paddingLeft","paddingRight","ButtonLink","props","primary","to","color","variant","classes","renderLink","React","useMemo","forwardRef","itemProps","ref","Button","component","className","Home","Grid","container","alignItems","direction","justify","style","minHeight","item","xs","Typography","theme","homeButton","marginRight","spacing","title","flexGrow","appbar","background","palette","default","text","marginBottom","IconButtonLink","IconButton","edge","Header","AppBar","position","elevation","Toolbar","name","testData","maxPoints","paper","padding","barPaperIntern","display","flexDirection","overflow","whiteSpace","dark","barPaperTL","secondary","points","textAlign","Bar","width","Box","Paper","compareSecondColumn","a","b","CreateLeaderboard","data","page","slice","sort","map","key","index","Leaderboard","Container","maxWidth","root","classname","createMuiTheme","type","App","ThemeProvider","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bf03f503.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    margin: '25px 15px',\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n  },\r\n});\r\n\r\nexport default function ButtonLink(props) {\r\n    const { primary, to, color, variant } = props;\r\n    const classes = useStyles();\r\n  \r\n    const renderLink = React.useMemo(\r\n      () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n      [to],\r\n    );\r\n  \r\n    return (\r\n      <Button color={color} variant={variant} component={renderLink} className={classes.button}>\r\n        {primary}\r\n      </Button>\r\n    )\r\n}","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport ButtonLink from '../components/ButtonLink';\r\n\r\n\r\nexport default function Home(){\r\n    return (\r\n      <Grid container alignItems=\"center\" direction=\"column\" justify=\"center\" style={{ minHeight: '100vh' }}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h1\"> E1T1 Leaderboard</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <ButtonLink primary=\"Enter\" to=\"/interns\" color=\"primary\" variant=\"outlined\"/>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    homeButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appbar: {\r\n        background: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        marginBottom: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nfunction IconButtonLink(props) {\r\n    const { primary, to, } = props;\r\n    const classes = useStyles();\r\n  \r\n    const renderLink = React.useMemo(\r\n      () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n      [to],\r\n    );\r\n  \r\n    return (\r\n      <IconButton edge=\"start\" className={classes.homeButton} color=\"inherit\" component={renderLink}>\r\n        {primary}\r\n      </IconButton>\r\n    )\r\n  }\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className={classes.appbar} elevation={0}>\r\n            <Toolbar>\r\n                <IconButtonLink primary={<CloseIcon/>} to=\"/\"/>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.name}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from 'react';\r\nimport { Paper, Container, makeStyles, Typography, Box } from '@material-ui/core';\r\n\r\nconst testData = [[\"Name One\", 91], [\"Name Two\", 9], [\"Name Three\", 97], [\"Name Four\", 19], [\"Name Five\", 18], [\"Name Six\", 40], [\"Name Seven\", 65], [\"Name Eight\", 84], [\"Name Nine\", 36], [\"Name Ten\", 33]];\r\nlet maxPoints = 0;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  barPaperIntern: {\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    color: 'white',\r\n    background: theme.palette.primary.dark,\r\n  },\r\n  barPaperTL: {\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    color: 'white',\r\n    background: theme.palette.secondary.dark,\r\n  },\r\n  name: {\r\n    flexGrow: 1,\r\n  },\r\n  points: {\r\n    textAlign: 'right',\r\n  }\r\n}));\r\n\r\nfunction Bar(props) {\r\n  const classes = useStyles();\r\n  const { name, points, color } = props;\r\n  const width = points / maxPoints;\r\n  return(\r\n    <Box width={width}>\r\n      <Paper elevation={3} className={color}>\r\n          <Typography className={classes.name}> {name} </Typography>\r\n          <Typography> {points} </Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction compareSecondColumn(a, b) {\r\n  if (a[1] === b[1]) {\r\n    return 0;\r\n  }\r\n  else {\r\n    return (a[1] > b[1]) ? -1 : 1;\r\n  }\r\n}\r\n\r\nfunction CreateLeaderboard(props) {\r\n  const classes = useStyles();\r\n  let data = props.data;\r\n  let color = classes.barPaperTL;\r\n\r\n  if (props.page === \"interns\") {\r\n    data = props.data.slice(0, 3)\r\n    color = classes.barPaperIntern;\r\n  }\r\n\r\n  data.sort(compareSecondColumn);\r\n  maxPoints = data[0][1];\r\n  return data.map((key, index) => {\r\n    return (\r\n      <Bar name={key[0]} points={key[1]} color={color}/>\r\n    );\r\n  });\r\n}\r\n\r\nexport default function Leaderboard(props) {\r\n  const classes = useStyles();\r\n  return(\r\n    <Container maxWidth=\"lg\">\r\n      <Paper elevation={2} className={classes.paper}>\r\n          <CreateLeaderboard data={testData} page={props.page} />\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Header from '../components/Header'\r\nimport Leadeboard from '../components/Leaderboard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default function Home(){\r\n    const classes = useStyles();\r\n    return (\r\n      <div classname={classes.root}>\r\n        <Header name=\"Team Leaders\"></Header>\r\n        <Leadeboard page={\"teamleaders\"}/>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Header from '../components/Header';\r\nimport Leadeboard from '../components/Leaderboard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default function Home(){\r\n    const classes = useStyles();\r\n    return (\r\n      <div classname={classes.root}>\r\n        <Header name=\"Interns\"></Header>\r\n        <Leadeboard page={\"interns\"}/>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport Home from './pages/Home';\nimport TeamLeaders from './pages/TeamLeaders';\nimport Interns from './pages/Interns';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <Router>\n          <Switch>\n            <Route exact path=\"/\"> <Home/> </Route>\n            <Route exact path=\"/teamleaders\"> <TeamLeaders/> </Route>\n            <Route exact path=\"/interns\"> <Interns/> </Route>\n          </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}